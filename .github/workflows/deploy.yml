name: CI/CD - Build & Deploy to Linux

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build React App
        run: npm run build

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy build folder
        run: |
          ssh -o StrictHostKeyChecking=no -p "${{ secrets.SSH_PORT }}" \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "mkdir -p ${{ secrets.TARGET_DIR }}/tmp_upload"

          rsync -avz -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }}" \
            build/ "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.TARGET_DIR }}/tmp_upload/"

          ssh -o StrictHostKeyChecking=no -p "${{ secrets.SSH_PORT }}" \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "
            sudo rm -rf ${{ secrets.TARGET_DIR }}/old_build || true
            if [ -d ${{ secrets.TARGET_DIR }}/current ]; then
              sudo mv ${{ secrets.TARGET_DIR }}/current ${{ secrets.TARGET_DIR }}/old_build
            fi
            sudo mv ${{ secrets.TARGET_DIR }}/tmp_upload ${{ secrets.TARGET_DIR }}/current
            sudo chown -R www-data:www-data ${{ secrets.TARGET_DIR }}/current
            sudo systemctl reload nginx
          "
